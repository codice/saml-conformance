/*
Copyright (c) 2018 Codice Foundation

Released under the GNU Lesser General Public License; see
http://www.gnu.org/licenses/lgpl.html
*/

library 'github-utils-shared-library@master'

pipeline {
    agent { label 'dind' }
    options {
        buildDiscarder(logRotator(numToKeepStr:'25'))
        disableConcurrentBuilds()
        timestamps()
    }
    environment {
        LINUX_MVN_RANDOM = '-Djava.security.egd=file:/dev/./urandom'
        PATH="${tool 'docker-latest'}/bin:${tool 'gradle-4.9'}/bin:$PATH"
    }
    stages {
        stage('Setup') {
            steps {
                withCredentials([usernameColonPassword(credentialsId: '	cxbot-github-auth', variable: 'GITHUB_TOKEN')]) {
                    postCommentIfPR("Internal DDF test has been started. Your results will be available at completion. See build progress in [Jenkins UI](${BUILD_URL}) or in [Blue Ocean UI](${BUILD_URL}display/redirect).", 'codice', 'saml-conformance', "${GITHUB_TOKEN}")
                }
            }
        }
        stage('SAML CTK Build') {
            steps {
                sh './gradlew clean build docker'
            }
        }
        stage('Pull DDF Docker Image') {
            steps {
                sh 'docker pull codice/ddf:edge-alpine'
            }
        }
        stage('Run Tests') {
            steps {
                sh 'docker-compose --file deployment/docker/docker-compose.yml up --abort-on-container-exit'
            }
            post {
                always {
                    sh 'docker-compose --file deployment/docker/docker-compose.yml down'
                }
            }
        }
    }
    post {
        success {
            withCredentials([usernameColonPassword(credentialsId: '	cxbot-github-auth', variable: 'GITHUB_TOKEN')]) {
                postCommentIfPR("Build success! See the job results in [Jenkins UI](${BUILD_URL}) or in [Blue Ocean UI](${BUILD_URL}display/redirect).", 'codice', 'saml-conformance', "${GITHUB_TOKEN}")
            }
        }
        failure {
            withCredentials([usernameColonPassword(credentialsId: '	cxbot-github-auth', variable: 'GITHUB_TOKEN')]) {
                postCommentIfPR("Build failure. See the job results in [Jenkins UI](${BUILD_URL}) or in [Blue Ocean UI](${BUILD_URL}display/redirect).", 'codice', 'saml-conformance', "${GITHUB_TOKEN}")
            }
        }
        unstable {
            withCredentials([usernameColonPassword(credentialsId: '	cxbot-github-auth', variable: 'GITHUB_TOKEN')]) {
                postCommentIfPR("Build unstable. See the job results in [Jenkins UI](${BUILD_URL}) or in [Blue Ocean UI](${BUILD_URL}display/redirect).", 'codice', 'saml-conformance', "${GITHUB_TOKEN}")
            }
        }
    }
}
